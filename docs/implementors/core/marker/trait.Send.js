(function() {var implementors = {};
implementors["tydi"] = [{"text":"impl Send for Logger","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UniquelyNamedBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for NonZeroReal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Name","synthetic":true,"types":[]},{"text":"impl Send for PathName","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Library","synthetic":true,"types":[]},{"text":"impl Send for Project","synthetic":true,"types":[]},{"text":"impl Send for Interface","synthetic":true,"types":[]},{"text":"impl Send for Streamlet","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for Stream","synthetic":true,"types":[]},{"text":"impl Send for Group","synthetic":true,"types":[]},{"text":"impl Send for Union","synthetic":true,"types":[]},{"text":"impl Send for ElementStream","synthetic":true,"types":[]},{"text":"impl Send for Signals","synthetic":true,"types":[]},{"text":"impl Send for Direction","synthetic":true,"types":[]},{"text":"impl Send for Synchronicity","synthetic":true,"types":[]},{"text":"impl Send for LogicalType","synthetic":true,"types":[]},{"text":"impl Send for LogicalSplitItem","synthetic":true,"types":[]},{"text":"impl Send for PhysicalSplitItem","synthetic":true,"types":[]},{"text":"impl Send for Complexity","synthetic":true,"types":[]},{"text":"impl Send for Fields","synthetic":true,"types":[]},{"text":"impl Send for PhysicalStream","synthetic":true,"types":[]},{"text":"impl Send for Signal","synthetic":true,"types":[]},{"text":"impl Send for SignalList","synthetic":true,"types":[]},{"text":"impl Send for Origin","synthetic":true,"types":[]},{"text":"impl Send for Width","synthetic":true,"types":[]},{"text":"impl Send for ChiselConfig","synthetic":true,"types":[]},{"text":"impl Send for ChiselBackEnd","synthetic":true,"types":[]},{"text":"impl Send for Field","synthetic":true,"types":[]},{"text":"impl Send for Record","synthetic":true,"types":[]},{"text":"impl Send for Parameter","synthetic":true,"types":[]},{"text":"impl Send for Port","synthetic":true,"types":[]},{"text":"impl Send for Component","synthetic":true,"types":[]},{"text":"impl Send for Package","synthetic":true,"types":[]},{"text":"impl Send for Project","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for VHDLConfig","synthetic":true,"types":[]},{"text":"impl Send for VHDLBackEnd","synthetic":true,"types":[]},{"text":"impl Send for AbstractionLevel","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()